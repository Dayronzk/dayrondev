{"version":3,"file":"component---src-pages-archive-js-d5d03fca5764480e5833.js","mappings":"qLAWMA,EAAuBC,EAAAA,QAAAA,IAAAA,WAAU,wEAAVA,CAAU,grCA2GzB,YAAQ,SAALC,MAAkBC,OAAOC,UAAU,IA6HpD,UAhHoB,SAAH,GAA4B,IAAtBC,EAAQ,EAARA,SACfC,EAD6B,EAAJC,KACTC,kBAAkBC,MAClCC,GAAcC,EAAAA,EAAAA,QAAO,MACrBC,GAAcD,EAAAA,EAAAA,QAAO,MACrBE,GAAiBF,EAAAA,EAAAA,QAAO,IACxBG,GAAuBC,EAAAA,EAAAA,MAY7B,OAVAC,EAAAA,EAAAA,YAAU,WACJF,IAIJG,EAAAA,EAAAA,OAAUP,EAAYQ,SAASC,EAAAA,EAAAA,aAC/BF,EAAAA,EAAAA,OAAUL,EAAYM,SAASC,EAAAA,EAAAA,UAAS,IAAK,IAC7CN,EAAeK,QAAQE,SAAQ,SAACC,EAAKC,GAAC,OAAKL,EAAAA,EAAAA,OAAUI,GAAKF,EAAAA,EAAAA,UAAa,GAAJG,GAAQ,IAC7E,GAAG,IAGD,gBAAC,KAAM,CAACjB,SAAUA,GAChB,gBAAC,IAAM,CAACkB,MAAM,YAEd,4BACE,0BAAQF,IAAKX,GACX,sBAAIc,UAAU,eAAa,aAC3B,qBAAGA,UAAU,YAAU,oDAGzB,gBAACxB,EAAoB,CAACqB,IAAKT,GACzB,6BACE,6BACE,0BACE,iCACA,oCACA,sBAAIY,UAAU,kBAAgB,YAC9B,sBAAIA,UAAU,kBAAgB,kBAC9B,uCAGJ,6BACGlB,EAASmB,OAAS,GACjBnB,EAASoB,KAAI,WAAWJ,GAAO,IAC7B,EADkB,EAAJK,KAULC,YARPC,EAAI,EAAJA,KACAC,EAAM,EAANA,OACAC,EAAQ,EAARA,SACAC,EAAG,EAAHA,IACAC,EAAO,EAAPA,QACAV,EAAK,EAALA,MACAW,EAAI,EAAJA,KACAC,EAAO,EAAPA,QAEF,OACE,sBAAIC,IAAKd,EAAGD,IAAK,SAAAgB,GAAE,OAAKxB,EAAeK,QAAQI,GAAKe,CAAE,GACpD,sBAAIb,UAAU,iBAAe,GAAK,IAAIc,KAAKT,GAAMU,eAEjD,sBAAIf,UAAU,SAASD,GAGvB,sBAAIC,UAAU,0BACXW,EAAU,4BAAOA,GAAkB,kCAGtC,sBAAIX,UAAU,wBACXU,aAAI,EAAJA,EAAMT,QAAS,GACdS,EAAKR,KAAI,SAACc,EAAMlB,GAAC,OACf,wBAAMc,IAAKd,GACRkB,EACA,GACAlB,IAAMY,EAAKT,OAAS,GAAK,wBAAMD,UAAU,aAAW,KAChD,KAIb,sBAAIA,UAAU,SACZ,2BACGO,GACC,qBAAGU,KAAMV,EAAU,aAAW,iBAC5B,gBAAC,KAAI,CAACW,KAAK,cAGdZ,GACC,qBAAGW,KAAMX,EAAQ,aAAW,eAC1B,gBAAC,KAAI,CAACY,KAAK,YAGdV,GACC,qBAAGS,KAAMT,EAAK,aAAW,wBACvB,gBAAC,KAAI,CAACU,KAAK,cAGdT,GACC,qBAAGQ,KAAMR,EAAS,aAAW,0BAC3B,gBAAC,KAAI,CAACS,KAAK,iBAOzB,QAOhB,C","sources":["webpack://v4/./src/pages/archive.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { srConfig } from '@config';\nimport sr from '@utils/sr';\nimport { Layout } from '@components';\nimport { Icon } from '@components/icons';\nimport { usePrefersReducedMotion } from '@hooks';\n\nconst StyledTableContainer = styled.div`\n  margin: 100px -20px;\n\n  @media (max-width: 768px) {\n    margin: 50px -10px;\n  }\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n\n    .hide-on-mobile {\n      @media (max-width: 768px) {\n        display: none;\n      }\n    }\n\n    tbody tr {\n      &:hover,\n      &:focus {\n        background-color: var(--light-navy);\n      }\n    }\n\n    th,\n    td {\n      padding: 10px;\n      text-align: left;\n\n      &:first-child {\n        padding-left: 20px;\n\n        @media (max-width: 768px) {\n          padding-left: 10px;\n        }\n      }\n      &:last-child {\n        padding-right: 20px;\n\n        @media (max-width: 768px) {\n          padding-right: 10px;\n        }\n      }\n\n      svg {\n        width: 20px;\n        height: 20px;\n      }\n    }\n\n    tr {\n      cursor: default;\n\n      td:first-child {\n        border-top-left-radius: var(--border-radius);\n        border-bottom-left-radius: var(--border-radius);\n      }\n      td:last-child {\n        border-top-right-radius: var(--border-radius);\n        border-bottom-right-radius: var(--border-radius);\n      }\n    }\n\n    td {\n      &.year {\n        padding-right: 20px;\n\n        @media (max-width: 768px) {\n          padding-right: 10px;\n          font-size: var(--fz-sm);\n        }\n      }\n\n      &.title {\n        padding-top: 15px;\n        padding-right: 20px;\n        color: var(--lightest-slate);\n        font-size: var(--fz-xl);\n        font-weight: 600;\n        line-height: 1.25;\n      }\n\n      &.company {\n        font-size: var(--fz-lg);\n        white-space: nowrap;\n      }\n\n      &.tech {\n        font-size: var(--fz-xxs);\n        font-family: var(--font-mono);\n        line-height: 1.5;\n        .separator {\n          margin: 0 5px;\n        }\n        span {\n          display: inline-block;\n        }\n      }\n\n      &.links {\n        min-width: 100px;\n\n        div {\n          display: flex;\n          align-items: center;\n\n          a {\n            ${({ theme }) => theme.mixins.flexCenter};\n            flex-shrink: 0;\n          }\n\n          a + a {\n            margin-left: 10px;\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ArchivePage = ({ location, data }) => {\n  const projects = data.allMarkdownRemark.edges;\n  const revealTitle = useRef(null);\n  const revealTable = useRef(null);\n  const revealProjects = useRef([]);\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    if (prefersReducedMotion) {\n      return;\n    }\n\n    sr.reveal(revealTitle.current, srConfig());\n    sr.reveal(revealTable.current, srConfig(200, 0));\n    revealProjects.current.forEach((ref, i) => sr.reveal(ref, srConfig(i * 10)));\n  }, []);\n\n  return (\n    <Layout location={location}>\n      <Helmet title=\"Archive\" />\n\n      <main>\n        <header ref={revealTitle}>\n          <h1 className=\"big-heading\">Proyectos</h1>\n          <p className=\"subtitle\">Una gran lista de cosas en las que he trabajado</p>\n        </header>\n\n        <StyledTableContainer ref={revealTable}>\n          <table>\n            <thead>\n              <tr>\n                <th>Año</th>\n                <th>Titulo</th>\n                <th className=\"hide-on-mobile\">Hecho en</th>\n                <th className=\"hide-on-mobile\">Construido con</th>\n                <th>Enlaces</th>\n              </tr>\n            </thead>\n            <tbody>\n              {projects.length > 0 &&\n                projects.map(({ node }, i) => {\n                  const {\n                    date,\n                    github,\n                    external,\n                    ios,\n                    android,\n                    title,\n                    tech,\n                    company,\n                  } = node.frontmatter;\n                  return (\n                    <tr key={i} ref={el => (revealProjects.current[i] = el)}>\n                      <td className=\"overline year\">{`${new Date(date).getFullYear()}`}</td>\n\n                      <td className=\"title\">{title}</td>\n\n\n                      <td className=\"company hide-on-mobile\">\n                        {company ? <span>{company}</span> : <span>—</span>}\n                      </td>\n\n                      <td className=\"tech hide-on-mobile\">\n                        {tech?.length > 0 &&\n                          tech.map((item, i) => (\n                            <span key={i}>\n                              {item}\n                              {''}\n                              {i !== tech.length - 1 && <span className=\"separator\">&middot;</span>}\n                            </span>\n                          ))}\n                      </td>\n\n                      <td className=\"links\">\n                        <div>\n                          {external && (\n                            <a href={external} aria-label=\"External Link\">\n                              <Icon name=\"External\" />\n                            </a>\n                          )}\n                          {github && (\n                            <a href={github} aria-label=\"GitHub Link\">\n                              <Icon name=\"GitHub\" />\n                            </a>\n                          )}\n                          {ios && (\n                            <a href={ios} aria-label=\"Apple App Store Link\">\n                              <Icon name=\"AppStore\" />\n                            </a>\n                          )}\n                          {android && (\n                            <a href={android} aria-label=\"Google Play Store Link\">\n                              <Icon name=\"PlayStore\" />\n                            </a>\n                          )}\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </StyledTableContainer>\n      </main>\n    </Layout>\n  );\n};\nArchivePage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default ArchivePage;\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/content/projects/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date\n            title\n            tech\n            github\n            external\n            ios\n            android\n            company\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"names":["StyledTableContainer","styled","theme","mixins","flexCenter","location","projects","data","allMarkdownRemark","edges","revealTitle","useRef","revealTable","revealProjects","prefersReducedMotion","usePrefersReducedMotion","useEffect","sr","current","srConfig","forEach","ref","i","title","className","length","map","node","frontmatter","date","github","external","ios","android","tech","company","key","el","Date","getFullYear","item","href","name"],"sourceRoot":""}