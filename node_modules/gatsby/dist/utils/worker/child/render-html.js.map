{"version":3,"sources":["../../../../src/utils/worker/child/render-html.ts"],"names":["join","path","posix","lastSessionId","htmlComponentRenderer","webpackStats","resourcesForTemplateCache","Map","inFlightResourcesForTemplate","clearCaches","clear","readPageData","publicDir","pagePath","filePath","rawPageData","fs","readFile","JSON","parse","doGetResourcesForTemplate","pageData","scriptsAndStyles","componentChunkName","staticQueryContext","staticQueryHashes","getResourcesForTemplate","memoizedResourcesForTemplate","get","inFlight","doWorkPromise","set","resources","delete","truncateObjStrings","obj","key","length","renderHTMLProd","htmlComponentRendererPath","paths","envVars","sessionId","process","cwd","isPreview","env","GATSBY_IS_PREVIEW","unsafeBuiltinsUsageByPagePath","previewErrors","forEach","value","require","global","unsafeBuiltinUsage","Bluebird","map","resourcesForTemplate","html","unsafeBuiltinsUsage","default","outputFile","e","context","truncatedPageData","stack","stringify","message","code","name","concurrency","renderHTMLDev","outputDir","htmlString"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-namespace */\n\nimport fs from \"fs-extra\"\nimport Bluebird from \"bluebird\"\nimport * as path from \"path\"\nimport { generateHtmlPath, fixedPagePath } from \"gatsby-core-utils\"\nimport { truncate } from \"lodash\"\n\nimport {\n  readWebpackStats,\n  getScriptsAndStylesForTemplate,\n  clearCache as clearAssetsMappingCache,\n} from \"../../client-assets-for-template\"\nimport type { IPageDataWithQueryResult } from \"../../page-data\"\nimport type { IRenderHtmlResult } from \"../../../commands/build-html\"\nimport {\n  clearStaticQueryCaches,\n  IResourcesForTemplate,\n  getStaticQueryContext,\n} from \"../../static-query-utils\"\n// we want to force posix-style joins, so Windows doesn't produce backslashes for urls\nconst { join } = path.posix\n\ndeclare global {\n  namespace NodeJS {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    interface Global {\n      unsafeBuiltinUsage: Array<string> | undefined\n    }\n  }\n}\n\n/**\n * Used to track if renderHTMLProd / renderHTMLDev are called within same \"session\" (from same renderHTMLQueue call).\n * As long as sessionId remains the same we can rely on memoized/cached resources for templates, css file content for inlining and static query results.\n * If session changes we invalidate our memoization caches.\n */\nlet lastSessionId = 0\nlet htmlComponentRenderer\nlet webpackStats\n\nconst resourcesForTemplateCache = new Map<string, IResourcesForTemplate>()\nconst inFlightResourcesForTemplate = new Map<\n  string,\n  Promise<IResourcesForTemplate>\n>()\n\nfunction clearCaches(): void {\n  clearStaticQueryCaches()\n  resourcesForTemplateCache.clear()\n  inFlightResourcesForTemplate.clear()\n\n  clearAssetsMappingCache()\n}\n\nasync function readPageData(\n  publicDir: string,\n  pagePath: string\n): Promise<IPageDataWithQueryResult> {\n  const filePath = join(\n    publicDir,\n    `page-data`,\n    fixedPagePath(pagePath),\n    `page-data.json`\n  )\n  const rawPageData = await fs.readFile(filePath, `utf-8`)\n\n  return JSON.parse(rawPageData)\n}\n\nasync function doGetResourcesForTemplate(\n  pageData: IPageDataWithQueryResult\n): Promise<IResourcesForTemplate> {\n  const scriptsAndStyles = await getScriptsAndStylesForTemplate(\n    pageData.componentChunkName,\n    webpackStats\n  )\n\n  const { staticQueryContext } = await getStaticQueryContext(\n    pageData.staticQueryHashes\n  )\n\n  return {\n    staticQueryContext,\n    ...scriptsAndStyles,\n  }\n}\n\nasync function getResourcesForTemplate(\n  pageData: IPageDataWithQueryResult\n): Promise<IResourcesForTemplate> {\n  const memoizedResourcesForTemplate = resourcesForTemplateCache.get(\n    pageData.componentChunkName\n  )\n  if (memoizedResourcesForTemplate) {\n    return memoizedResourcesForTemplate\n  }\n\n  const inFlight = inFlightResourcesForTemplate.get(pageData.componentChunkName)\n  if (inFlight) {\n    return inFlight\n  }\n\n  const doWorkPromise = doGetResourcesForTemplate(pageData)\n  inFlightResourcesForTemplate.set(pageData.componentChunkName, doWorkPromise)\n\n  const resources = await doWorkPromise\n\n  resourcesForTemplateCache.set(pageData.componentChunkName, resources)\n  inFlightResourcesForTemplate.delete(pageData.componentChunkName)\n\n  return resources\n}\n\nconst truncateObjStrings = (obj): IPageDataWithQueryResult => {\n  // Recursively truncate strings nested in object\n  // These objs can be quite large, but we want to preserve each field\n  for (const key in obj) {\n    if (typeof obj[key] === `object` && obj[key] !== null) {\n      truncateObjStrings(obj[key])\n    } else if (typeof obj[key] === `string`) {\n      obj[key] = truncate(obj[key], { length: 250 })\n    }\n  }\n\n  return obj\n}\n\nexport const renderHTMLProd = async ({\n  htmlComponentRendererPath,\n  paths,\n  envVars,\n  sessionId,\n}: {\n  htmlComponentRendererPath: string\n  paths: Array<string>\n  envVars: Array<[string, string | undefined]>\n  sessionId: number\n}): Promise<IRenderHtmlResult> => {\n  const publicDir = join(process.cwd(), `public`)\n  const isPreview = process.env.GATSBY_IS_PREVIEW === `true`\n\n  const unsafeBuiltinsUsageByPagePath = {}\n  const previewErrors = {}\n\n  // Check if we need to do setup and cache clearing. Within same session we can reuse memoized data,\n  // but it's not safe to reuse them in different sessions. Check description of `lastSessionId` for more details\n  if (sessionId !== lastSessionId) {\n    clearCaches()\n\n    // This is being executed in child process, so we need to set some vars\n    // for modules that aren't bundled by webpack.\n    envVars.forEach(([key, value]) => (process.env[key] = value))\n\n    htmlComponentRenderer = require(htmlComponentRendererPath)\n\n    webpackStats = await readWebpackStats(publicDir)\n\n    lastSessionId = sessionId\n\n    if (global.unsafeBuiltinUsage && global.unsafeBuiltinUsage.length > 0) {\n      unsafeBuiltinsUsageByPagePath[`__import_time__`] =\n        global.unsafeBuiltinUsage\n    }\n  }\n\n  await Bluebird.map(\n    paths,\n    async pagePath => {\n      try {\n        const pageData = await readPageData(publicDir, pagePath)\n        const resourcesForTemplate = await getResourcesForTemplate(pageData)\n\n        const { html, unsafeBuiltinsUsage } =\n          await htmlComponentRenderer.default({\n            pagePath,\n            pageData,\n            ...resourcesForTemplate,\n          })\n\n        if (unsafeBuiltinsUsage.length > 0) {\n          unsafeBuiltinsUsageByPagePath[pagePath] = unsafeBuiltinsUsage\n        }\n\n        await fs.outputFile(generateHtmlPath(publicDir, pagePath), html)\n      } catch (e) {\n        if (e.unsafeBuiltinsUsage && e.unsafeBuiltinsUsage.length > 0) {\n          unsafeBuiltinsUsageByPagePath[pagePath] = e.unsafeBuiltinsUsage\n        }\n        // add some context to error so we can display more helpful message\n        e.context = {\n          path: pagePath,\n          unsafeBuiltinsUsageByPagePath,\n        }\n\n        // If we're in Preview-mode, write out a simple error html file.\n        if (isPreview) {\n          const pageData = await readPageData(publicDir, pagePath)\n          const truncatedPageData = truncateObjStrings(pageData)\n\n          const html = `<h1>Preview build error</h1>\n        <p>There was an error when building the preview page for this page (\"${pagePath}\").</p>\n        <h3>Error</h3>\n        <pre><code>${e.stack}</code></pre>\n        <h3>Page component id</h3>\n        <p><code>${pageData.componentChunkName}</code></p>\n        <h3>Page data</h3>\n        <pre><code>${JSON.stringify(truncatedPageData, null, 4)}</code></pre>`\n\n          await fs.outputFile(generateHtmlPath(publicDir, pagePath), html)\n          previewErrors[pagePath] = {\n            e,\n            message: e.message,\n            code: e.code,\n            stack: e.stack,\n            name: e.name,\n          }\n        } else {\n          throw e\n        }\n      }\n    },\n    { concurrency: 2 }\n  )\n\n  return { unsafeBuiltinsUsageByPagePath, previewErrors }\n}\n\n// TODO: remove when DEV_SSR is done\nexport const renderHTMLDev = async ({\n  htmlComponentRendererPath,\n  paths,\n  envVars,\n  sessionId,\n}: {\n  htmlComponentRendererPath: string\n  paths: Array<string>\n  envVars: Array<[string, string | undefined]>\n  sessionId: number\n}): Promise<Array<unknown>> => {\n  const outputDir = join(process.cwd(), `.cache`, `develop-html`)\n\n  // Check if we need to do setup and cache clearing. Within same session we can reuse memoized data,\n  // but it's not safe to reuse them in different sessions. Check description of `lastSessionId` for more details\n  if (sessionId !== lastSessionId) {\n    clearCaches()\n\n    // This is being executed in child process, so we need to set some vars\n    // for modules that aren't bundled by webpack.\n    envVars.forEach(([key, value]) => (process.env[key] = value))\n\n    htmlComponentRenderer = require(htmlComponentRendererPath)\n\n    lastSessionId = sessionId\n  }\n\n  return Bluebird.map(\n    paths,\n    async pagePath => {\n      try {\n        const htmlString = await htmlComponentRenderer.default({\n          pagePath,\n        })\n        return fs.outputFile(generateHtmlPath(outputDir, pagePath), htmlString)\n      } catch (e) {\n        // add some context to error so we can display more helpful message\n        e.context = {\n          path: pagePath,\n        }\n        throw e\n      }\n    },\n    { concurrency: 2 }\n  )\n}\n"],"file":"render-html.js"}