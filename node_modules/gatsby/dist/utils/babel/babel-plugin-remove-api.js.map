{"version":3,"sources":["../../../src/utils/babel/babel-plugin-remove-api.ts"],"names":["removeApiCalls","api","options","assertVersion","apisToRemove","apis","length","console","warn","name","visitor","ExportNamedDeclaration","path","declaration","node","t","isExportNamedDeclaration","specifiersToKeep","specifiers","forEach","specifier","isExportSpecifier","isIdentifier","exported","includes","scope","bindings","local","remove","push","apiToCheck","isFunctionDeclaration","id","isVariableDeclaration","declarations"],"mappings":";;;;;AAAA;;AACA;;;;;;eAGe,gCAAQ,SAASA,cAAT,CACrBC,GADqB,EAErBC,OAFqB,EAGV;AAAA;;AACXD,EAAAA,GAAG,CAACE,aAAJ,CAAkB,CAAlB;AAEA,QAAMC,YAAY,oBAAGF,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEG,IAAZ,yDAAoB,EAAtC;;AAEA,MAAI,CAACD,YAAY,CAACE,MAAlB,EAA0B;AACxBC,IAAAA,OAAO,CAACC,IAAR,CACG,iEADH;AAGD;;AAED,SAAO;AACLC,IAAAA,IAAI,EAAG,YADF;AAELC,IAAAA,OAAO,EAAE;AACPC,MAAAA,sBAAsB,CAACC,IAAD,EAAa;AACjC,cAAMC,WAAW,GAAGD,IAAI,CAACE,IAAL,CAAUD,WAA9B;;AAEA,YAAIE,CAAC,CAACC,wBAAF,CAA2BJ,IAAI,CAACE,IAAhC,CAAJ,EAA2C;AACzC,gBAAMG,gBAIL,GAAG,EAJJ;AAKAL,UAAAA,IAAI,CAACE,IAAL,CAAUI,UAAV,CAAqBC,OAArB,CAA6BC,SAAS,IAAI;AACxC,gBACEL,CAAC,CAACM,iBAAF,CAAoBD,SAApB,KACAL,CAAC,CAACO,YAAF,CAAeF,SAAS,CAACG,QAAzB,CADA,IAEAnB,YAAY,CAACoB,QAAb,CAAsBJ,SAAS,CAACG,QAAV,CAAmBd,IAAzC,CAHF,EAIE;AACAG,cAAAA,IAAI,CAACa,KAAL,CAAWC,QAAX,CAAoBN,SAAS,CAACO,KAAV,CAAgBlB,IAApC,EAA0CG,IAA1C,CAA+CgB,MAA/C;AACD,aAND,MAMO;AACLX,cAAAA,gBAAgB,CAACY,IAAjB,CAAsBT,SAAtB;AACD;AACF,WAVD;AAYAR,UAAAA,IAAI,CAACE,IAAL,CAAUI,UAAV,GAAuBD,gBAAvB;AACD;;AAED,YAAIa,UAAJ;;AACA,YAAIf,CAAC,CAACgB,qBAAF,CAAwBlB,WAAxB,KAAwCA,WAAW,CAACmB,EAAxD,EAA4D;AAC1DF,UAAAA,UAAU,GAAGjB,WAAW,CAACmB,EAAZ,CAAevB,IAA5B;AACD;;AACD,YACEM,CAAC,CAACkB,qBAAF,CAAwBpB,WAAxB,KACAE,CAAC,CAACO,YAAF,CAAeT,WAAW,CAACqB,YAAZ,CAAyB,CAAzB,EAA4BF,EAA3C,CAFF,EAGE;AACAF,UAAAA,UAAU,GAAGjB,WAAW,CAACqB,YAAZ,CAAyB,CAAzB,EAA4BF,EAA5B,CAA+BvB,IAA5C;AACD;;AAED,YAAIqB,UAAU,IAAI1B,YAAY,CAACoB,QAAb,CAAsBM,UAAtB,CAAlB,EAAqD;AACnDlB,UAAAA,IAAI,CAACgB,MAAL;AACD;AACF;;AAvCM;AAFJ,GAAP;AA4CD,CA1Dc,C","sourcesContent":["import { declare } from \"@babel/helper-plugin-utils\"\nimport * as t from \"@babel/types\"\nimport type { PluginObj, ConfigAPI } from \"@babel/core\"\n\nexport default declare(function removeApiCalls(\n  api: ConfigAPI,\n  options: { apis?: Array<string> }\n): PluginObj {\n  api.assertVersion(7)\n\n  const apisToRemove = options?.apis ?? []\n\n  if (!apisToRemove.length) {\n    console.warn(\n      `No list of APIs was given to remove, check your plugin options.`\n    )\n  }\n\n  return {\n    name: `remove-api`,\n    visitor: {\n      ExportNamedDeclaration(path): void {\n        const declaration = path.node.declaration\n\n        if (t.isExportNamedDeclaration(path.node)) {\n          const specifiersToKeep: Array<\n            | t.ExportDefaultSpecifier\n            | t.ExportNamespaceSpecifier\n            | t.ExportSpecifier\n          > = []\n          path.node.specifiers.forEach(specifier => {\n            if (\n              t.isExportSpecifier(specifier) &&\n              t.isIdentifier(specifier.exported) &&\n              apisToRemove.includes(specifier.exported.name)\n            ) {\n              path.scope.bindings[specifier.local.name].path.remove()\n            } else {\n              specifiersToKeep.push(specifier)\n            }\n          })\n\n          path.node.specifiers = specifiersToKeep\n        }\n\n        let apiToCheck\n        if (t.isFunctionDeclaration(declaration) && declaration.id) {\n          apiToCheck = declaration.id.name\n        }\n        if (\n          t.isVariableDeclaration(declaration) &&\n          t.isIdentifier(declaration.declarations[0].id)\n        ) {\n          apiToCheck = declaration.declarations[0].id.name\n        }\n\n        if (apiToCheck && apisToRemove.includes(apiToCheck)) {\n          path.remove()\n        }\n      },\n    },\n  }\n})\n"],"file":"babel-plugin-remove-api.js"}